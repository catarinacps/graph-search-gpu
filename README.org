#+title: Arquiteturas Avançadas - TP 2
#+author: Henrique Silva
#+email: hcpsilva@inf.ufrgs.br
#+infojs_opt:
#+property: cache yes

Este repositório é dedicado ao segundo trabalho da cadeira de Arquiteturas
Avançadas (INF). É esperado que nós implementemos dois algoritmos de busca em
grafos na linguage CUDA, para GPUs.

** Sumário                                                           :TOC_3:
  - [[#objetivo][Objetivo]]
  - [[#estrutura-do-projeto][Estrutura do Projeto]]
    - [[#ferramentas-utilizadas][Ferramentas Utilizadas]]
  - [[#compilação][Compilação]]
  - [[#execução][Execução]]
  - [[#contato][Contato]]

** Objetivo

Da especificação do trabalho:

#+begin_example
Implemente dois algoritmos de grafos: Floyd-Warshall e BFS para que utilizem uma
GPU para realizar a computação.

Realize testes com as diferentes entradas fornecidas e compare o desempenho da
versão disponibilizada com sua implementação em GPU.

Faça uma análise crítica dos resultados obtidos em relação ao desempenho obtido
na GPU vs obtido na CPU. Era o que vocês esperavam? Houve diferença entre os
dois algoritmos? Por quê? E entre os grafos?

Detalhe as características do processador e da GPU utilizados para os testes.
#+end_example

** Estrutura do Projeto

Segue a estrutura do projeto, comentada:

#+begin_src bash :exports results :results output
tree -nd
#+end_src

#+RESULTS:
#+begin_example
.
├── bin
├── build
├── data
├── include
│   ├── clipp
│   └── fmt
├── lib
└── src
    ├── methods
    └── utils

10 directories
#+end_example

*** Ferramentas Utilizadas

Utilizamos algumas ferramentas /open-source/ no processo de desenvolvimento
desse trabalho:

1. /{fmt}/ ([[https://github.com/fmtlib/fmt][GitHub page]])

   Para a formatação simples (estilo Python) de strings para as saídas padrão.

2. /clipp/ ([[https://github.com/muellan/clipp][GitHub page]])

   Para o parseamento de opções provenientes da linha de comando.

** Compilação

Para buildar, execute a seguinte linha no /root/ do repositório:

#+begin_src bash :tangle yes
make
#+end_src

Para usar todos as threads de execução da sua máquina, execute da seguinte
maneira:

#+begin_src bash :tangle yes
make -j<NUMBER_OF_CORES>

# ex:
make -j4
#+end_src

** Execução

No processo de compilação, são gerados dois binários:

- cpu :: para a execução em CPU
- gpu :: para a execução em GPU

Dada compilação, primeiro é necessário adicionar à =LD_LIBRARY_PATH= a
biblioteca compartilhada /fmt/:

#+begin_src bash :exports both :results output
export LD_LIBRARY_PATH+=:$(readlink -f lib)
#+end_src

Após esse passo, verifique as opções de execução do binário desejado conforme o
seguinte comando:

#+begin_src bash :exports both :results output
./build/<binário> help
#+end_src

** Contato

Você pode entrar em contato comigo pelo seguinte e-mail:

#+begin_example
hcpsilva@inf.ufrgs.br
#+end_example
